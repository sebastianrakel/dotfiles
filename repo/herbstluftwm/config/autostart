#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

hc keyunbind --all

Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q close
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-Shift-Return spawn "${HOME}/.config/herbstluftwm/scripts/q3terminal.sh"
hc keybind $Mod-d spawn rofi -show combi -combi-modi drun,run -show-icons
hc keybind $Mod-w spawn rofi -show window -window-command 'herbstclient bring {window}'
hc keybind $Mod-Shift-e spawn rofi -show pw -modes "pw:${HOME}/.config/rofi/modes/power.sh"
hc keybind $Mod-t spawn rofi -show theme -modes "theme:${HOME}/.config/rofi/modes/theme.sh"
hc keybind $Mod-p spawn workspace-switcher rofi
hc keybind $Mod-Shift-s spawn flameshot gui

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( "web" "code" "mail" "remote" )
tag_keys=( {1..4} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-Control-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-Shift-c cycle -1
hc keybind $Mod-i or \
    : substitute WINID clients.focus.winid and \
        . jumpto urgent \
        . try new_attr string clients.my_oldfocus \
        . set_attr clients.my_oldfocus WINID \
    : substitute WINID clients.my_oldfocus and \
        . jumpto WINID \
        . remove_attr clients.my_oldfocus \
        . spawn notify-send -t 1000 -i edit-undo HLWM 'Jump to previously focused window' \
    : spawn notify-send -t 1000 -i messagebox_warning HLWM 'No urgent or formerly focused window'


# theme

hc set frame_border_width 2
hc set show_frame_decorations 'focused_if_multiple'
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 10
hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings false
hc set smart_frame_surroundings true
hc set mouse_recenter_gap 0

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc attr theme.title_height 15
hc attr theme.title_when always
hc attr theme.title_font 'monospace:size=12'
hc attr theme.title_depth 5  # space below the title's baseline
hc attr theme.inner_width 0
hc attr theme.border_width 0
hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 1
hc attr theme.tiling.outer_width 1
hc set_attr theme.style_override '.tab .content { padding: 4px; }'

# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done

if [[ -h "${HOME}/.config/herbstluftwm/theme.sh" ]]; then
    source "${HOME}/.config/herbstluftwm/theme.sh"
fi

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule class="Gcr-prompter" manage=on floating=on floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on floatplacement=center
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc rule class=thunderbird tag=mail
hc rule class=remmina tag=remote

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

hostname=$(hostnamectl hostname)


if [[ "${hostname}" != "quarktasche" ]]; then
    hc detect_monitors
fi

feh --bg-fill "${HOME}/Pictures/Wallpaper/gravity_falls_neon.jpg"

eww kill

#for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
echo "Start panel for monitor ${monitor}"
eww open "${hostname}"
#done
