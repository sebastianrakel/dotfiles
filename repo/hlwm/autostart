#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

source "${HOME}/.config/herbstluftwm/active_theme.sh"

hc emit_hook reload
hc keyunbind --all

Mod=Mod4    # Use alt as the main modifier

hc keybind $Mod-Shift-q close
hc keybind $Mod-Shift-r reload

# Launch
hc keybind $Mod-Return spawn ${TERMINAL:-xterm} # use your $TERMINAL with xterm as fallback
hc keybind $Mod-d spawn rofi -show combi -combi-modi drun,run -show-icons
hc keybind $Mod-Shift-e spawn ruby ~/.bin/scripts/locker/locker.rb
hc keybind $Mod+p spawn ruby ~/Projects/Linux/workspace-switcher/workspace-switcher.rb
hc keybind $Mod-Shift+p spawn rofi-pass --root .password-store:.password-store-futev
hc keybind $Mod-Shift+o spawn ~/Projects/Fun/splatmoji/splatmoji type
hc keybind $Mod+w spawn rofi -show window

hc keybind $Mod-Print spawn flameshot gui

# Display
hc keybind XF86MonBrightnessUp spawn ${HOME}/.bin/backlight.rb increase
hc keybind XF86MonBrightnessDown spawn ${HOME}/.bin/backlight.rb decrease

# Multimedia
hc keybind XF86AudioRaiseVolume spawn ${HOME}/.bin/volume_control.sh increase
hc keybind XF86AudioLowerVolume spawn ${HOME}/.bin/volume_control.sh decrease
hc keybind XF86AudioMute spawn ${HOME}/.bin/volume_control.sh mute
hc keybind XF86Launch5 spawn ${HOME}/.bin/local/mute_toggle.sh
hc keybind $Mod-Prior spawn ${HOME}/.bin/volume_control.sh increase
hc keybind $Mod-Next spawn ${HOME}/.bin/volume_control.sh decrease

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {main,www,cad,dev,virt,remote,stuff,games} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Control-p pseudotile toggle

hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-Shift-c cycle -1
hc keybind $Mod-i jumpto urgent

# settings
hc set frame_border_active_color $color_pink
hc set frame_border_normal_color $color_pink
hc set frame_bg_normal_color $color_background
hc set frame_bg_active_color $color_current_line
hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 2
hc set frame_gap 5

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc attr theme.active.color $color_current_line
hc attr theme.normal.color $color_background
hc attr theme.urgent.color $color_orange

hc set_attr theme.title_color $color_foreground
hc set_attr theme.active.title_color $color_foreground

hc attr theme.border_width 2
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 2
hc attr theme.floating.outer_color $color_background

hc attr theme.active.outer_color $color_foreground
hc attr theme.title_font 'monospace'

hc attr theme.inner_width 0
hc attr theme.inner_color $color_background

hc attr theme.active.inner_color $color_foreground
hc attr theme.background_color $color_background
hc attr theme.title_height 20
hc attr theme.padding_top 5

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule instance=sun-awt-X11-XWindowPeer title~'win.*' manage=off

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

hc detect_monitors

change_wallpaper.sh

if [ -e "${HOME}/.bin/bar_starter.rb" ]; then
    echo "Will start bar"
    "${HOME}/.bin/bar_starter.rb"
else
    echo "Use herbstluftwm panel"
    panel="${HOME}/.config/herbstluftwm/panel.sh"
    [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh

    for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
	echo "Start panel for monitor ${monitor}"
	"${panel}" "${monitor}" &
    done
fi
